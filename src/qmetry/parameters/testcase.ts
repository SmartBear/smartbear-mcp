import { z } from "zod";

export const TEST_CASE = {
  PARAMETERS: [
    {
      name: "projectKey",
      type: z.string().optional(),
      description:
        "Project key to use for the request. Defaults to configured project.",
      required: true,
      examples: ["default", "UT", "MAC"],
    },
    {
      name: "baseUrl",
      type: z.string().url().optional(),
      description: "Optional QMetry base URL override.",
      required: false,
    },
    {
      name: "viewId",
      type: z.number(),
      description: "View ID (required). Example: 162799",
      required: true,
      examples: ["162799", "167136", "167137"],
    },
    {
      name: "folderPath",
      type: z.string(),
      description: 'Folder path (required). Example: empty string for root ""',
      required: true,
      examples: ["", "Folder/Subfolder"],
    },
    {
      name: "folderID",
      type: z.number().optional(),
      description: "Optional folder numeric ID.",
      required: false,
      examples: ["", "491078", "491079"],
    },
    {
      name: "start",
      type: z.number().optional(),
      description: "Start offset (default 0).",
      required: false,
      examples: ["0", "100", "200"],
    },
    {
      name: "page",
      type: z.number().optional(),
      description: "Page number to return (starts from 1)",
      required: false,
      examples: ["1", "2", "3"],
    },
    {
      name: "limit",
      type: z.number().optional(),
      description: "Number of records (default 100).",
      required: false,
      examples: ["50", "100", "200"],
    },
    {
      name: "scope",
      type: z.string().optional(),
      description: "Scope of the test cases.",
      required: false,
      examples: ["", "project", "folder"],
    },
    {
      name: "showRootOnly",
      type: z.boolean().optional(),
      description: "Whether to show only root-level test cases.",
      required: false,
      examples: ["true", "false"],
    },
    {
      name: "getSubEntities",
      type: z.boolean().optional(),
      description: "Whether to include sub-entities in the results.",
      required: false,
      examples: ["true", "false"],
    },
    {
      name: "hideEmptyFolders",
      type: z.boolean().optional(),
      description: "Whether to hide empty folders in the results.",
      required: false,
      examples: ["true", "false"],
    },
    {
      name: "folderSortColumn",
      type: z.string().optional(),
      description: "folder sort column (default 'name')",
      required: false,
      examples: ["", "name", "createdOn", "modifiedOn"],
    },
    {
      name: "restoreDefaultColumns",
      type: z.boolean().optional(),
      description: "Whether to restore default columns (default 'name')",
      required: false,
      examples: ["true", "false"],
    },
    {
      name: "folderSortOrder",
      type: z.string().optional(),
      description: "folder sort order (ASC or DESC)",
      required: false,
      examples: ["ASC", "DESC"],
    },
    {
      name: "filter",
      type: z.string().optional(),
      description: "Filter string (JSON) - default is '[]'",
      required: false,
      examples: [
        "[]",
        '[{"type":"string","value":"test","field":"name"},{"type":"string","value":"UT-TC-36","field":"entityKeyId"}]',
      ],
    },
    {
      name: "udfFilter",
      type: z.string().optional(),
      description: "UDF filter string (JSON) - default is '[]'",
      required: false,
      examples: ["[]", '[{"name":"My UDF","value":"Some Value"}]'],
    },
    {
      name: "tcID",
      type: z.number(),
      description: "Test Case ID (required). Example: 4426293",
      required: true,
      examples: ["4426293", "4426294", "4426295"],
    },
    {
      name: "id",
      type: z.number(),
      description: "Test Case ID (required). Example: 4426293",
      required: true,
      examples: ["4426293", "4426294", "4426295"],
    },
    {
      name: "version",
      type: z.number(),
      description: "Test Case Version (required). Example: 1",
      required: true,
      examples: ["1", "2", "3"],
    },
  ],
};
