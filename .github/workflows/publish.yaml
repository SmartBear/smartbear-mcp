name: Publish

permissions:
  contents: read
  id-token: write

on:
  workflow_dispatch:
    inputs:
      push_ecr:
        description: "Push Docker image to Amazon ECR"
        required: false
        type: boolean
        default: true
      publish_npm:
        description: "Publish the package to npm"
        required: false
        type: boolean
        default: true
      publish_mcp:
        description: "Publish to the MCP Registry"
        required: false
        type: boolean
        default: true
  release:
    types: [published]

jobs:
  publish:
    name: Publish package
    runs-on: ubuntu-24.04
    environment: Production
    env:
      RUN_PUSH_ECR: ${{ github.event_name != 'workflow_dispatch' || inputs.push_ecr }}
      RUN_PUBLISH_NPM: ${{ github.event_name != 'workflow_dispatch' || inputs.publish_npm }}
      RUN_PUBLISH_MCP: ${{ github.event_name != 'workflow_dispatch' || inputs.publish_mcp }}
    steps:
      - name: debug info
        run: |
          echo "RUN_PUSH_ECR=${{ env.RUN_PUSH_ECR }}"
          echo "RUN_PUBLISH_NPM=${{ env.RUN_PUBLISH_NPM }}"
          echo "RUN_PUBLISH_MCP=${{ env.RUN_PUBLISH_MCP }}"
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org/'
          scope: '@smartbear'

      - name: Configure AWS credentials
        if: ${{ env.RUN_PUSH_ECR == 'true' }}
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: ${{ secrets.ECR_IAM_ROLE_ARN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR private
        if: ${{ env.RUN_PUSH_ECR == 'true' }}
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: "709825985650"

      - name: Extract version from package.json
        id: extract_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Update server.json version
        run: |
          jq --arg v "${{ steps.extract_version.outputs.VERSION }}" \
            '.version = $v | .packages[0].version = $v' \
            server.json > server.json.tmp && mv server.json.tmp server.json

      - name: Build, tag, and push docker image
        if: ${{ env.RUN_PUSH_ECR == 'true' }}
        env:
          IMAGE_TAG: ${{ steps.extract_version.outputs.VERSION }}
        run: |
          DEST=${{ secrets.ECR_PRIVATE_REGISTRY_URL }}:${IMAGE_TAG}
          docker build -t $DEST .
          docker push $DEST

      - name: Install dependencies
        if: ${{ env.RUN_PUBLISH_NPM == 'true' }}
        run: npm ci

      - name: Publish to npm
        if: ${{ env.RUN_PUBLISH_NPM == 'true' }}
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: prepare mcp-publisher
        if: ${{ env.RUN_PUBLISH_MCP == 'true' }}
        run: |
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/v1.3.3/mcp-publisher_1.3.3_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz" | tar xz mcp-publisher

      - name: Login
        if: ${{ env.RUN_PUBLISH_MCP == 'true' }}
        run: |
          ./mcp-publisher login github-oidc
          ./mcp-publisher login dns --domain smartbear.com --private-key "${{ secrets.GH_MCP_REGISTRY_KEY }}"

      - name: Publish to MCP Registry
        if: ${{ env.RUN_PUBLISH_MCP == 'true' }}
        run: ./mcp-publisher publish
