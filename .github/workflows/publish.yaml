name: Publish

permissions:
  contents: read
  id-token: write

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  publish:
    name: Publish package
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org/'
          scope: '@smartbear'
      
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # 6.0.0
        with:
          go-version: '1.25'
          cache: true
      
      - name: Login to Amazon ECR public
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # 2.0.1
        with:
          registry-type: public
      
      - name: Login to Amazon ECR private
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Extract version from package.json
        id: extract_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Update server.json version
        run: |
          jq --arg v "${{ steps.extract_version.outputs.VERSION }}" \
            '.version = $v | .packages[0].version = $v' \
            server.json > server.json.tmp && mv server.json.tmp server.json

      - name: Build, tag, and push docker image
        env:
          ECR_PUBLIC_ALIAS: r2q3q1g5
          REPOSITORY: smartbear-mcp
          IMAGE_TAG: ${{ steps.extract_version.outputs.VERSION }}
        run: |
          PUBLIC_IMAGE="public.ecr.aws/${ECR_PUBLIC_ALIAS}/${REPOSITORY}:${IMAGE_TAG}"
          PRIVATE_IMAGE=${{ secrets.ECR_PRIVATE_REGISTRY_URL }}/${REPOSITORY}:${IMAGE_TAG}
          docker build -t "$PUBLIC_IMAGE" -t "$PRIVATE_IMAGE" .
          docker push "$PUBLIC_IMAGE"
          docker push "$PRIVATE_IMAGE"
          
      - name: Install dependencies
        run: npm ci

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build mcp-publisher
        run: |
          git clone https://github.com/modelcontextprotocol/registry
          cd registry
          make publisher
          cp bin/mcp-publisher "$GITHUB_WORKSPACE"/mcp-publisher

      - name: Login to MCP Registry
        run: |
          ./mcp-publisher login github-oidc
          ./mcp-publisher login dns --domain smartbear.com --private-key "${{ secrets.GH_MCP_REGISTRY_KEY }}"
      
      - name: Publish to MCP Registry
        run: ./mcp-publisher publish
        